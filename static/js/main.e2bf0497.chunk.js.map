{"version":3,"sources":["ListaDeUsuarios.jsx","index.jsx"],"names":["ListaDeUsuarios","useState","infos","setInfos","useEffect","axios","get","method","then","resposta","data","cards","card_number","cvv","expiry_date","abrirPagamento","setAbrirPagamento","pegarUsuario","setPegarUsuario","abrirPagou","setAbrirPagou","abrirNaoRecebeu","setAbrirNaoRecebeu","valorCartao","setValorCartao","valorDinheiro","setValorDinheiro","validarCampo","setValidarCampo","map","item","class","key","index","onClick","name","src","img","alt","id","username","style","display","className","thousandSeparator","value","onChange","event","target","prefix","inputmode","placeholder","substr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAyIeA,EAnIS,WACpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACNC,IAAMC,IAAI,mDAAoD,CAC1DC,OAAQ,QACTC,MAAK,SAACC,GAAcN,EAASM,EAASC,WAC1C,IAGP,IAAMC,EAAQ,CAEV,CACEC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGf,CACEF,YAAa,mBACbC,IAAK,IACLC,YAAa,UAUnB,EAA4Cb,mBAAS,QAArD,mBAAOc,EAAP,KAAuBC,EAAvB,KACA,EAAwCf,mBAAS,IAAjD,mBAAOgB,EAAP,KAAqBC,EAArB,KACA,EAAoCjB,mBAAS,QAA7C,mBAAOkB,EAAP,KAAmBC,EAAnB,KACA,EAA8CnB,mBAAS,IAAvD,mBAAOoB,EAAP,KAAwBC,EAAxB,KACA,EAAsCrB,mBAAS,KAA/C,mBAAOsB,EAAP,KAAoBC,EAApB,KACA,EAA0CvB,mBAAS,IAAnD,mBAAOwB,EAAP,KAAsBC,EAAtB,KACA,EAAwCzB,mBAAS,QAAjD,mBAAO0B,EAAP,KAAqBC,EAArB,KA2CI,OACI,oCACK1B,EAAM2B,KAAI,SAAAC,GAAI,OACX,yBAAKC,MAAM,sBAAsBC,IAAKF,EAAKG,OACvC,yBAAKF,MAAM,aAAaG,QAAS,WA5C7B,IAACC,IA4CiDL,EAAKK,KA3C3EnB,EAAkB,QAClBE,EAAgBiB,KA2CI,yBAAKJ,MAAM,QAAQK,IAAKN,EAAKO,IAAKC,IAAI,uBACtC,yBAAKP,MAAM,eACP,yBAAKA,MAAM,QAAX,uBAAoCD,EAAKK,MACzC,yBAAKJ,MAAM,QAAX,OAAuBD,EAAKS,GAA5B,gBAA6CT,EAAKU,WAEtD,yBAAKT,MAAM,SAAX,iDAQZ,yBAAKA,MAAM,UAAUU,MAAO,CAACC,QAAS3B,IAClC,yBAAK4B,UAAU,cACX,uBAAGA,UAAU,yBAAb,kBAAoD,8BAAO1B,IAC3D,yBAAKc,MAAM,cACP,gDACA,yBAAKY,UAAU,cACX,kBAAC,IAAD,CAAcC,mBAAmB,EAAMC,MAAOpB,EAAeqB,SA9BtE,SAACC,GAChBrB,EAAiBqB,EAAMC,OAAOH,OAC9BjB,EAAgB,SA4B2FqB,OAAQ,MAAOC,UAAU,UAAUC,YAAY,YAClI,uBAAGV,MAAO,CAACC,QAAQf,IAAnB,yBAEJ,sDAGA,4BAAQI,MAAM,eAAec,MAAOtB,EAAauB,SApFjD,SAACC,GACrBvB,EAAeuB,EAAMC,OAAOH,SAoFJ,4BAAQA,MAAM,KAAd,uBAAoClC,EAAM,GAAGC,YAAYwC,QAAQ,IACjE,4BAAQP,MAAM,KAAd,uBAAoClC,EAAM,GAAGC,YAAYwC,QAAQ,MAIzE,yBAAKrB,MAAM,cACP,yBAAKA,MAAM,sBAAsBG,QAAS,WApD9DlB,EAAkB,UAoDE,YACA,yBAAKe,MAAM,uBAAuBG,QAAS,WAvEzC,KAAlBT,EACAG,EAAgB,SAIZN,EADgB,MAAhBC,EACmB,GAEA,UAEvBP,EAAkB,QAClBI,EAAc,QACdM,EAAiB,IACjBE,EAAgB,WA2DA,YAKZ,yBAAKe,UAAU,aAAaF,MAAO,CAACC,QAASvB,IACzC,uBAAGwB,UAAU,yBAAb,uBACA,0CAAe,2BAAItB,GAAnB,iCACA,4BAAQa,QAAS,WAxD7Bd,EAAc,UAwDF,aC/HhBiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e2bf0497.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport './listadeusuarios.css';\r\nimport axios from 'axios';\r\n\r\n//Pegando as informações da API pelo GET\r\nconst ListaDeUsuarios = () => {\r\n    const [infos, setInfos] = useState([])\r\n    useEffect(() => {\r\n        axios.get('https://www.mocky.io/v2/5d531c4f2e0000620081ddce', {\r\n            method: 'GET',\r\n        }).then((resposta) => {setInfos(resposta.data)})\r\n    }, [])\r\n\r\n// Mock com lista de cartões para teste\r\nconst cards = [\r\n    // cartão válido\r\n    {\r\n      card_number: '1111111111111111',\r\n      cvv: 789,\r\n      expiry_date: '01/18',\r\n    },\r\n    // cartão inválido\r\n    {\r\n      card_number: '4111111111111234',\r\n      cvv: 123,\r\n      expiry_date: '01/20',\r\n    },\r\n];\r\n\r\n// Função para pegar a escolha do cartão do input select\r\nconst escolhaDoCartao = (event) => {\r\n    setValorCartao(event.target.value);\r\n}\r\n\r\n// Ações dos modals\r\nconst [abrirPagamento, setAbrirPagamento] = useState(\"none\"); // Para abrir modal de pagamento\r\nconst [pegarUsuario, setPegarUsuario] = useState(\"\"); // Para pegar o nome do usuário\r\nconst [abrirPagou, setAbrirPagou] = useState(\"none\"); // Para abrir modal com recibo de pagamento\r\nconst [abrirNaoRecebeu, setAbrirNaoRecebeu] = useState(\"\"); // Para msg de erro de pagamento\r\nconst [valorCartao, setValorCartao] = useState(\"1\"); // Para pegar o cartão escolhido para pagamento\r\nconst [valorDinheiro, setValorDinheiro] = useState(\"\"); // Para pegar o valor de pagamento digitado\r\nconst [validarCampo, setValidarCampo] = useState(\"none\"); // Para validar campo de valor digitado\r\n\r\n// Função para abrir o modal de pagamento do usuário\r\nconst abrirModalPagar = (name) => {\r\n    setAbrirPagamento(\"flex\")\r\n    setPegarUsuario(name)\r\n}\r\n\r\n// Função que abre o modal de recibo de pagamento \r\nconst abrirModalPagou = () => {\r\n    if (valorDinheiro === \"\") {\r\n        setValidarCampo(\"flex\");\r\n    } else \r\n        {\r\n        if (valorCartao === \"1\") {\r\n            setAbrirNaoRecebeu(\"\");\r\n        } else {\r\n            setAbrirNaoRecebeu(\"não\");\r\n        }\r\n        setAbrirPagamento(\"none\");\r\n        setAbrirPagou(\"flex\");\r\n        setValorDinheiro(\"\");\r\n        setValidarCampo(\"none\");\r\n    }\r\n}\r\n\r\n// Função para fechar o modal do recibo de pagamento\r\nconst fecharModalPagamento = () => {\r\n    setAbrirPagamento(\"none\");\r\n}\r\n\r\n// Função para fechar o modal do recibo de pagamento\r\nconst fecharModal = () => {\r\n    setAbrirPagou(\"none\");\r\n}\r\n\r\n// Função para validar campo de valor para pagamento do usuário\r\nconst valorInput = (event) => {\r\n    setValorDinheiro(event.target.value);\r\n    setValidarCampo(\"none\");\r\n}\r\n\r\n// Renderizando na tela as informações recebidas da API \r\n    return (\r\n        <>\r\n            {infos.map(item => (\r\n                <div class=\"clientcardcontainer\" key={item.index}>\r\n                    <div class=\"clientcard\" onClick={()=>{abrirModalPagar(item.name)}}>\r\n                        <img class=\"image\" src={item.img} alt=\"Foto do usuário\" />\r\n                        <div class=\"client-info\">\r\n                            <div class=\"info\">Nome do Usuário: {item.name}</div>\r\n                            <div class=\"info\">ID: {item.id} - Username: {item.username}</div>\r\n                        </div>\r\n                        <div class=\"hover\">\r\n                            Clique no card para realizar o pagamento\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n\r\n            {/*--------------------------------Abrir Modal de pagamento----------------------------------*/}\r\n            <div class=\"overlay\" style={{display: abrirPagamento}}>       \r\n                <div className=\"abrirModal\">\r\n                    <p className=\"texto-cabecalho-modal\">Pagamento para <span>{pegarUsuario}</span></p>\r\n                    <div class=\"gridchoice\">\r\n                        <div>Digite o valor:</div>\r\n                        <div className=\"valorInput\">\r\n                            <NumberFormat thousandSeparator={true} value={valorDinheiro} onChange={valorInput} prefix={'R$ '} inputmode=\"numeric\" placeholder=\"R$ 0,00\"/>\r\n                            <p style={{display:validarCampo}}>Campo obrigatório</p>\r\n                        </div>\r\n                        <div>\r\n                            Escolha um cartão:\r\n                        </div>\r\n                        <select class=\"cardselector\" value={valorCartao} onChange={escolhaDoCartao}>\r\n                            <option value=\"1\">Cartão com final {cards[0].card_number.substr(-4)}</option>\r\n                            <option value=\"2\">Cartão com final {cards[1].card_number.substr(-4)}</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"gridbutton\">\r\n                        <div class=\"decentbutton cancel\" onClick={()=>{fecharModalPagamento()}}>Cancelar</div>\r\n                        <div class=\"decentbutton success\" onClick={()=>{abrirModalPagou ()}}>Pagar</div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n            {/*------------------------------Abrir Modal de recibo de pagamento--------------------------------*/}\r\n            <div className=\"abrirModal\" style={{display: abrirPagou}}>\r\n                <p className=\"texto-cabecalho-modal\">Recibo de pagamento</p>\r\n                <p>O Pagamento <b>{abrirNaoRecebeu}</b> foi concluído com sucesso</p>\r\n                <button onClick={()=>{fecharModal()}}>Fechar</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListaDeUsuarios","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ListaDeUsuarios from './ListaDeUsuarios';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ListaDeUsuarios />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}